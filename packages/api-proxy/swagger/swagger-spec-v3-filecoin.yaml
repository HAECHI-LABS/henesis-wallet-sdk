openapi: 3.0.0
info:
  title: FILECOIN
  description: Henesis API Proxy - v3 - filecoin OpenAPI Documentation
  version: '1.0'
  contact: {}
tags: []
servers:
  - url: http://localhost:3000
components:
  schemas:
    InvalidAccessIpException:
      type: object
      properties:
        message:
          type: string
          description: API 에러 메시지
          example: ip '106.101.128.133' is not allowed
        code:
          type: number
          description: 헤네시스 API 에러 코드
          example: 4008
      required:
        - message
        - code
    InvalidAccessTokenException:
      type: object
      properties:
        message:
          type: string
          description: API 에러 메시지
          example: expired or invalid access token and signature
        code:
          type: number
          description: 헤네시스 API 에러 코드
          example: 4001
      required:
        - message
        - code
    AccessTokenNotProvidedException:
      type: object
      properties:
        message:
          type: string
          description: API 에러 메시지
          example: access token not provided
        code:
          type: number
          description: 헤네시스 API 에러 코드
          example: 4001
      required:
        - message
        - code
    DefaultFeeWalletDTO:
      type: object
      properties:
        address:
          type: string
          description: 기본 수수료 지갑의 주소
          example: t1c4mfn5uk3kjhztosotp6eu5yh5ks5z6gja46ipy
      required:
        - address
    ProposalFeeWalletDTO:
      type: object
      properties:
        walletId:
          type: string
          description: 해당 요청 수수료 지갑을 사용하는 지갑의 ID
          example: t1c4mfn5uk3kjhztosotp6eu5yh5ks5z6gja46ipy
        address:
          type: string
          description: 요청 수수료 지갑의 주소
          example: t1c4mfn5uk3kjhztosotp6eu5yh5ks5z6gja46ipy
      required:
        - walletId
        - address
    FeeWalletDTO:
      type: object
      properties:
        defaultFeeWallet:
          description: 기본 수수료 지갑
          example: &ref_1
            address: t1c4mfn5uk3kjhztosotp6eu5yh5ks5z6gja46ipy
          allOf:
            - $ref: '#/components/schemas/DefaultFeeWalletDTO'
        proposalFeeWallets:
          description: 요청 수수료 지갑 목록
          example: &ref_2
            - walletId: c3a43bbf3d33e94fdc1adfc2d17a63b3
              address: t1c4mfn5uk3kjhztosotp6eu5yh5ks5z6gja46ipy
          type: array
          items:
            $ref: '#/components/schemas/ProposalFeeWalletDTO'
      required:
        - defaultFeeWallet
        - proposalFeeWallets
    BalanceDTO:
      type: object
      properties:
        amount:
          type: string
          description: '확정된 잔액 (단위: attoFIL)'
          example: '1000000000000'
        spendableAmount:
          type: string
          description: '출금 가능한 잔액 (= 총 잔액 - 확정되지 않은 출금 요청액) (단위: attoFIL)'
          example: '1000000000000'
        name:
          type: string
          description: 코인 이름
          example: Filecoin
        ticker:
          type: string
          description: 코인의 기호
          example: FIL
        decimals:
          type: number
          description: 코인의 소수점 자릿수
          example: 18
      required:
        - amount
        - spendableAmount
        - name
        - ticker
        - decimals
    BalanceWithIdDTO:
      type: object
      properties:
        amount:
          type: string
          description: '확정된 잔액 (단위: attoFIL)'
          example: '1000000000000'
        spendableAmount:
          type: string
          description: '출금 가능한 잔액 (= 총 잔액 - 확정되지 않은 출금 요청액) (단위: attoFIL)'
          example: '1000000000000'
        name:
          type: string
          description: 코인 이름
          example: Filecoin
        ticker:
          type: string
          description: 코인의 기호
          example: FIL
        decimals:
          type: number
          description: 코인의 소수점 자릿수
          example: 18
        walletId:
          type: string
          description: 지갑 ID
          example: 49e129bd5e1e67eddc5e317ed2e42b4c
      required:
        - amount
        - spendableAmount
        - name
        - ticker
        - decimals
        - walletId
    FeeWalletBalanceDTO:
      type: object
      properties:
        defaultFeeWallet:
          description: 기본 수수료 지갑의 잔액
          example: &ref_5
            amount: '1000000000000'
            spendableAmount: '1000000000000'
            name: Filecoin
            ticker: FIL
            decimals: 18
          allOf:
            - $ref: '#/components/schemas/BalanceDTO'
        proposalFeeWallets:
          description: 요청 수수료 지갑들의 잔액
          example: &ref_6
            - walletId: 49e129bd5e1e67eddc5e317ed2e42b4c
              amount: '1000000000000'
              spendableAmount: '1000000000000'
              name: Filecoin
              ticker: FIL
              decimals: 18
          type: array
          items:
            $ref: '#/components/schemas/BalanceWithIdDTO'
      required:
        - defaultFeeWallet
        - proposalFeeWallets
    InvalidStatusException:
      type: object
      properties:
        message:
          type: string
          description: API 에러 메시지
          example: '''status'' is invalid: not supported event status'
        code:
          type: number
          description: 헤네시스 API 에러 코드
          example: 4001
      required:
        - message
        - code
    TransactionDTO:
      type: object
      properties:
        id:
          type: string
          description: Henesis에서 부여한 트랜잭션의 ID
          example: c3a43bbf3d33e94fdc1adfc2d17a63b3
        hash:
          type: string
          description: 트랜잭션 해시
          example: bafy2bzaced4hk2ufk3xwcmxuiuikudoh6dcxgjfoforubsbn7tu5rfyc3446e
        feeAmount:
          type: string
          description: '수수료 양 (단위: attoFIL)'
          example: '314076729208'
      required:
        - id
        - hash
    TransferDTO:
      type: object
      properties:
        id:
          type: string
          description: 입출금 내역의 ID
          example: 5b0d5c94f8fa6c2a891eb4f833767f03
        from:
          type: string
          description: 출금 주소
          example: t1tian42omo3lnk6lh7mw6k3d4muelbfvvlmhufni
        to:
          type: string
          description: 입금 주소
          example: t2faaemofs4z3qnnpeawbrawyot43iuekkg52tjai
        amount:
          type: string
          description: '암호화폐(FIL)의 양 (단위: attoFIL)'
          example: '1000000000'
        feeAmount:
          type: string
          description: '총 수수료 양 (단위: attoFIL)'
          example: '1000000000'
        status:
          enum:
            - REQUESTED
            - PENDING
            - FAILED
            - MINED
            - REVERTED
            - CONFIRMED
          type: string
          description: 출금 상태
          example: CONFIRMED
        masterWalletId:
          type: string
          description: 입출금 마스터 지갑 ID
          example: ae40b1b3dd953e5592c21e58be30d807
        walletId:
          type: string
          description: 입출금이 발생한 마스터 지갑 혹은 입금 주소 ID
          example: 3dd953e5592c21e58be30d807ae40b1b
        type:
          enum:
            - WITHDRAWAL
            - DEPOSIT
          type: string
          description: 입출금 타입
          example: WITHDRAWAL
        proposalTransaction:
          description: 입출금 요청 트랜잭션
          example: &ref_0
            id: c3a43bbf3d33e94fdc1adfc2d17a63b3
            hash: bafy2bzaced4hk2ufk3xwcmxuiuikudoh6dcxgjfoforubsbn7tu5rfyc3446e
            feeAmount: '314076729208'
          allOf:
            - $ref: '#/components/schemas/TransactionDTO'
        transaction:
          description: 입출금 승인 트랜잭션
          example: *ref_0
          allOf:
            - $ref: '#/components/schemas/TransactionDTO'
        createdAt:
          type: string
          description: '입출금 생성 시간 (형식: ms, UNIX time)'
          example: '1612411568760'
        updatedAt:
          type: string
          description: '입출금 상태가 마지막으로 변경된 시간 (형식: ms, UNIX time)'
          example: '1612411724023'
        metadata:
          type: string
          description: 기타 정보 기록용 메타 데이터 (255자 제한)
          example: metadata
      required:
        - id
        - from
        - to
        - amount
        - status
        - masterWalletId
        - walletId
        - type
        - transaction
        - createdAt
        - updatedAt
    PaginationMetadata:
      type: object
      properties:
        nextUrl:
          type: string
          description: 다음 pagination url
          example: http://localhost:3000/api/v3/ethereum/transfers?page=2
        previousUrl:
          type: string
          description: 이전 pagination url
          example: http://localhost:3000/api/v3/ethereum/transfers?page=1
        totalCount:
          type: number
          description: 총 갯수
          example: 5
      required:
        - nextUrl
        - previousUrl
        - totalCount
    GetManyResponseForTransferDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/TransferDTO'
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
      required:
        - results
    MasterWalletNotFoundException:
      type: object
      properties:
        message:
          type: string
          description: API 에러 메시지
          example: wallet 'c27732256a1f8d45df5aec31ba7ef85cd' does not exist
        code:
          type: number
          description: 헤네시스 API 에러 코드
          example: 4000
      required:
        - message
        - code
    NoMasterWalletNameException:
      type: object
      properties:
        message:
          type: string
          description: API 에러 메시지
          example: wallet name should not be empty
        code:
          type: number
          description: 헤네시스 API 에러 코드
          example: 4000
      required:
        - message
        - code
    DepositAddressNotFoundException:
      type: object
      properties:
        message:
          type: string
          description: API 에러 메시지
          example: deposit address 'c27732256a1f8d45df5aec31ba7ef85cd' does not exist
        code:
          type: number
          description: 헤네시스 API 에러 코드
          example: 4000
      required:
        - message
        - code
    MasterWalletDto:
      type: object
      properties:
        id:
          type: string
          description: 마스터 지갑 ID
          example: a1f9e4c33ea9f51974490fd1c30efb3e
        name:
          type: string
          description: 마스터 지갑 이름
          example: filecoin-wallet-1
        address:
          type: string
          description: 마스터 지갑 주소
          example: t2faaemofs4z3qnnpeawbrawyot43iuekkg52tjai
        createdAt:
          type: string
          description: '마스터 지갑 생성 시간 (형식: ms, UNIX time)'
          example: '1614582860091'
        updatedAt:
          type: string
          description: '마스터 지갑 정보 수정 시간 (단위: ms, UNIX time)'
          example: '1614582928222'
        status:
          enum:
            - ACTIVE
            - CREATING
            - FAILED
            - INACTIVE
          type: string
          description: 마스터 지갑 상태
          example: ACTIVE
      required:
        - id
        - name
        - address
        - createdAt
        - updatedAt
        - status
    DepositAddressDTO:
      type: object
      properties:
        id:
          type: string
          description: 입금 주소 ID
          example: a1f9e4c33ea9f51974490fd1c30efb3e
        name:
          type: string
          description: 입금 주소 이름
          example: deposit-address-1
        address:
          type: string
          description: 입금 주소
          example: t1tian42omo3lnk6lh7mw6k3d4muelbfvvlmhufni
        createdAt:
          type: string
          description: '입금 주소 생성 시간 (단위: ms, UNIX time)'
          example: '1614582860091'
        updatedAt:
          type: string
          description: '입금 주소 정보 수정 시간 (단위: ms, UNIX time)'
          example: '1614582928222'
      required:
        - id
        - name
        - address
        - createdAt
        - updatedAt
    FlushDTO:
      type: object
      properties:
        id:
          type: string
          description: Henesis에서 부여한 집금 ID
          example: 76f42bbea97c5e5fb6420ee29060ffc3
        masterWalletId:
          type: string
          description: 집금한 마스터 지갑 ID
          example: 49e129bd5e1e67eddc5e317ed2e42b4c
        transfers:
          description: 집금을 통해 발생한 입출금 목록
          example: &ref_19
            - &ref_8
              id: 5b0d5c94f8fa6c2a891eb4f833767f03
              from: t1tian42omo3lnk6lh7mw6k3d4muelbfvvlmhufni
              to: t2faaemofs4z3qnnpeawbrawyot43iuekkg52tjai
              amount: '1000000000'
              feeAmount: '1000000000'
              status: CONFIRMED
              masterWalletId: ae40b1b3dd953e5592c21e58be30d807
              walletId: 3dd953e5592c21e58be30d807ae40b1b
              type: WITHDRAWAL
              transaction: *ref_0
              proposalTransaction: *ref_0
              createdAt: '1612411568760'
              updatedAt: '1612411724023'
              metadata: metadata
          type: array
          items:
            $ref: '#/components/schemas/TransferDTO'
        createdAt:
          type: string
          description: '집금 발생 시간 (형식: ms, UNIX time)'
          example: '1612411568760'
        updatedAt:
          type: string
          description: '집금 정보가 마지막으로 변경된 시간 (형식: ms, UNIX time)'
          example: '1612411724023'
      required:
        - id
        - masterWalletId
        - transfers
        - createdAt
        - updatedAt
    MasterWalletBalanceDto:
      type: object
      properties:
        amount:
          type: string
          description: '확정된 잔액 (단위: attoFIL)'
          example: '1000000000000'
        spendableAmount:
          type: string
          description: '출금 가능한 잔액 (= 총 잔액 - 확정되지 않은 출금 요청액) (단위: attoFIL)'
          example: '1000000000000'
        name:
          type: string
          description: 코인 이름
          example: Filecoin
        ticker:
          type: string
          description: 코인의 기호
          example: FIL
        decimals:
          type: number
          description: 코인의 소수점 자릿수
          example: 18
        aggregatedAmount:
          type: string
          description: >-
            마스터 지갑의 잔액과 하위 입금 주소들의 잔액을 모두 합한 잔액 (= 마스터 지갑 잔액 + 입금 주소 1 잔액 + 입금
            주소 2 잔액 + ...) (단위: attoFIL)
          example: '3248100000000'
      required:
        - amount
        - spendableAmount
        - name
        - ticker
        - decimals
        - aggregatedAmount
    FlushNotFoundException:
      type: object
      properties:
        message:
          type: string
          description: API 에러 메시지
          example: flush 'c27732256a1f8d45df5aec31ba7ef85cd' does not exist
        code:
          type: number
          description: 헤네시스 API 에러 코드
          example: 4000
      required:
        - message
        - code
    ChangeWalletNameRequestDTO:
      type: object
      properties:
        name:
          type: string
          description: 지갑의 새로운 이름
          example: name
      required:
        - name
    TransferRequestDTO:
      type: object
      properties:
        to:
          type: string
          description: 암호화폐를 받을 지갑 주소
          example: t1rxcckgd5rye7thpngyvykpfokfh7dwk3oggnx3a
        amount:
          type: string
          description: '암호화폐의 양 (단위: attoFIL)'
          example: '1304000000000000000'
        passphrase:
          type: string
          description: 지갑의 비밀번호
          example: passphrase
        gasPremium:
          type: string
          description: >-
            트랜잭션에 사용할 gas premium (단위: attoFIL) null일 경우, Henesis가 자동으로 0블럭 안에
            채굴될 수 있는 값으로 설정합니다.
          example: '199659'
        metadata:
          type: string
          description: 기타 정보 기록용 메타 데이터 (255자 제한)
          example: metadata
      required:
        - to
        - amount
        - passphrase
    FlushRequestDTO:
      type: object
      properties:
        targets:
          description: 집금할 입금 주소의 ID (집금 요청당 최대 50개의 입금 주소를 집금할 수 있습니다.)
          example:
            - 493ef9d5a4e86b9e7af657a56c8e3844
            - a52dea92424426e3ed2b6a32af76c7af
          type: array
          items:
            type: string
        passphrase:
          type: string
          description: 지갑의 비밀번호
          example: passphrase
        gasPremium:
          type: string
          description: >-
            트랜잭션에 사용할 gas premium (단위: attoFIL) null일 경우, Henesis가 자동으로 0블럭 안에
            채굴될 수 있는 값으로 설정합니다.
          example: '199659'
        metadata:
          type: string
          description: 기타 정보 기록용 메타 데이터 (255자 제한)
          example: metadata
      required:
        - targets
        - passphrase
    GetManyResponseForDepositAddressDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/DepositAddressDTO'
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
      required:
        - results
    CreateDepositAddressRequestDTO:
      type: object
      properties:
        name:
          type: string
          description: 입금 주소 이름
          example: test-deposit-address
      required:
        - name
    DepositAddressTransferRequestDTO:
      type: object
      properties:
        to:
          type: string
          description: 암호화폐를 받을 지갑 주소
          example: t1rxcckgd5rye7thpngyvykpfokfh7dwk3oggnx3a
        amount:
          type: string
          description: '암호화폐의 양 (단위: attoFIL)'
          example: '1304000000000000000'
        passphrase:
          type: string
          description: 지갑의 비밀번호
          example: passphrase
        metadata:
          type: string
          description: 기타 정보 기록용 메타 데이터 (255자 제한)
          example: metadata
      required:
        - to
        - amount
        - passphrase
    GetManyResponseForFlushDTO:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/FlushDTO'
        pagination:
          $ref: '#/components/schemas/PaginationMetadata'
      required:
        - results
paths:
  /api/v3/filecoin/fee-wallet:
    get:
      operationId: filecoin-FeeWalletController_getFeeWallets
      summary: 수수료 지갑 조회하기
      description: 수수료 지갑을 조회합니다.
      parameters:
        - &ref_3
          name: X-Henesis-Secret
          in: header
          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.
          schema:
            type: string
        - &ref_4
          name: Authorization
          in: header
          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer <TOKEN\>
          schema:
            example: Bearer <TOKEN>
            default: 'Bearer '
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeWalletDTO'
              example:
                defaultFeeWallet: *ref_1
                proposalFeeWallets: *ref_2
          description: ''
        '401': &ref_7
          description: 인증이 실패했을 때 발생하는 에러입니다.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InvalidAccessTokenException'
                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'
                  - $ref: '#/components/schemas/InvalidAccessIpException'
              examples:
                InvalidAccessTokenException:
                  value: &ref_9
                    message: expired or invalid access token and signature
                    code: 4001
                AccessTokenNotProvidedException:
                  value: &ref_10
                    message: access token not provided
                    code: 4001
                InvalidAccessIpException:
                  value: &ref_11
                    message: ip '106.101.128.133' is not allowed
                    code: 4008
      tags:
        - fee-wallet
  /api/v3/filecoin/fee-wallet/balance:
    get:
      operationId: filecoin-FeeWalletController_getBalance
      summary: 수수료 지갑 잔고 조회하기
      description: 수수료 지갑의 잔액을 조회합니다.
      parameters:
        - *ref_3
        - *ref_4
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeWalletBalanceDTO'
              example:
                defaultFeeWallet: *ref_5
                proposalFeeWallets: *ref_6
          description: ''
        '401': *ref_7
      tags:
        - fee-wallet
  /api/v3/filecoin/transfers:
    get:
      operationId: filecoin-TransfersController_getTransfers
      summary: 전체 입출금 목록 조회하기
      description: 모든 지갑의 가상자산 입출금 내역을 조회합니다.
      parameters:
        - name: X-Henesis-Secret
          in: header
          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.
          schema:
            type: string
        - name: Authorization
          in: header
          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer <TOKEN\>
          schema:
            example: Bearer <TOKEN>
            default: 'Bearer '
            type: string
        - name: walletId
          required: false
          in: query
          description: 마스터 지갑 혹은 입금 주소 ID
          schema:
            type: string
        - name: masterWalletId
          required: false
          in: query
          description: 마스터 지갑 ID
          schema:
            type: string
        - name: transactionId
          required: false
          in: query
          description: 트랜잭션 ID
          schema:
            type: string
        - name: transactionHash
          required: false
          in: query
          description: 트랜잭션 해시
          schema:
            type: string
        - name: status
          required: false
          in: query
          description: 입출금 상태
          schema:
            type: string
        - name: transferType
          required: false
          in: query
          description: 입출금 종류 (입금, 출금)
          schema:
            type: string
        - name: updatedAtGte
          required: false
          in: query
          description: 'updatedAt이 해당 시점과 같거나 그보다 이후인 데이터 조회 (형식: ms, UNIX time) '
          schema:
            type: string
        - name: updatedAtLt
          required: false
          in: query
          description: 'updatedAt이 해당 시점보다 이전인 데이터 조회 (형식: ms, UNIX time) '
          schema:
            type: string
        - name: size
          required: false
          in: query
          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15)'
          schema:
            type: number
        - name: page
          required: false
          in: query
          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)
          schema:
            type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyResponseForTransferDTO'
              example:
                pagination: &ref_16
                  nextUrl: http://localhost:3000/api/v3/filecoin/transfers?page=2
                  previousUrl: http://localhost:3000/api/v3/filecion/transfers?page=1
                  totalCount: 5
                results:
                  - *ref_8
          description: ''
        '400':
          description: 올바르지 않은 입출금 상태(status)로 요청하면 발생합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStatusException'
              example:
                message: '''status'' is invalid: not supported event status'
                code: 4001
        '401':
          description: 인증이 실패했을 때 발생하는 에러입니다.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InvalidAccessTokenException'
                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'
                  - $ref: '#/components/schemas/InvalidAccessIpException'
              examples:
                InvalidAccessTokenException:
                  value: *ref_9
                AccessTokenNotProvidedException:
                  value: *ref_10
                InvalidAccessIpException:
                  value: *ref_11
      tags:
        - transfers
  /api/v3/filecoin/wallets:
    get:
      operationId: filecoin-WalletsController_getMasterWallets
      summary: 전체 마스터 지갑 목록 조회하기
      description: 모든 마스터 지갑의 목록을 조회합니다.
      parameters:
        - &ref_12
          name: X-Henesis-Secret
          in: header
          description: 대시보드를 통해 발급 받은 API Secret을 입력합니다.
          schema:
            type: string
        - &ref_13
          name: Authorization
          in: header
          description: 대시보드를 통해 발급 받은 Access Token을 입력합니다. e.g. Bearer <TOKEN\>
          schema:
            example: Bearer <TOKEN>
            default: 'Bearer '
            type: string
        - name: name
          required: false
          in: query
          description: 마스터 지갑 이름
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MasterWalletDto'
          description: ''
        '401': &ref_14
          description: 인증이 실패했을 때 발생하는 에러입니다.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/InvalidAccessTokenException'
                  - $ref: '#/components/schemas/AccessTokenNotProvidedException'
                  - $ref: '#/components/schemas/InvalidAccessIpException'
              examples:
                InvalidAccessTokenException:
                  value: *ref_9
                AccessTokenNotProvidedException:
                  value: *ref_10
                InvalidAccessIpException:
                  value: *ref_11
      tags:
        - wallets
  /api/v3/filecoin/wallets/{masterWalletId}:
    get:
      operationId: filecoin-WalletsController_getMasterWallet
      summary: 마스터 지갑 정보 조회하기
      description: 특정 마스터 지갑의 정보를 조회합니다.
      parameters:
        - *ref_12
        - *ref_13
        - name: masterWalletId
          required: true
          in: path
          description: 마스터 지갑 ID
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterWalletDto'
              example:
                id: a1f9e4c33ea9f51974490fd1c30efb3e
                name: filecoin-wallet-1
                address: t2faaemofs4z3qnnpeawbrawyot43iuekkg52tjai
                createdAt: '1614582860091'
                updatedAt: '1614582928222'
                status: ACTIVE
          description: ''
        '400':
          description: 해당하는 id의 마스터 지갑이 없을 때 발생합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterWalletNotFoundException'
              example: &ref_15
                message: wallet 'c27732256a1f8d45df5aec31ba7ef85cd' does not exist
                code: 4000
        '401': *ref_14
      tags:
        - wallets
  /api/v3/filecoin/wallets/{masterWalletId}/balance:
    get:
      operationId: filecoin-WalletsController_getMasterWalletBalances
      summary: 마스터 지갑 잔고 조회하기
      description: 특정 마스터 지갑의 잔고를 조회합니다.
      parameters:
        - *ref_12
        - *ref_13
        - name: masterWalletId
          required: true
          in: path
          description: 마스터 지갑 ID
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MasterWalletBalanceDto'
          description: ''
        '400':
          description: 해당하는 id의 마스터 지갑이 없을 때 발생합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterWalletNotFoundException'
              example: *ref_15
        '401': *ref_14
      tags:
        - wallets
  /api/v3/filecoin/wallets/{masterWalletId}/name:
    patch:
      operationId: filecoin-WalletsController_changeMasterWalletName
      summary: 마스터 지갑 이름 변경하기
      description: 특정 마스터 지갑의 이름을 변경합니다.
      parameters:
        - *ref_12
        - *ref_13
        - name: masterWalletId
          required: true
          in: path
          description: 마스터 지갑 ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeWalletNameRequestDTO'
      responses:
        '200':
          description: ''
        '204':
          description: ''
        '400':
          description: 다음과 같은 bad request 에러가 발생할 수 있습니다.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/MasterWalletNotFoundException'
                  - $ref: '#/components/schemas/NoMasterWalletNameException'
              examples:
                MasterWalletNotFoundException:
                  value: *ref_15
                NoMasterWalletNameException:
                  value:
                    message: wallet name should not be empty
                    code: 4000
        '401': *ref_14
      tags:
        - wallets
  /api/v3/filecoin/wallets/{masterWalletId}/transfer:
    post:
      operationId: filecoin-WalletsController_transfer
      summary: 마스터 지갑에서 코인 전송하기
      description: 특정 마스터 지갑에서 가상자산을 송금합니다.
      parameters:
        - *ref_12
        - *ref_13
        - name: masterWalletId
          required: true
          in: path
          description: 마스터 지갑 ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequestDTO'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferDTO'
              example: *ref_8
          description: ''
        '400':
          description: 해당하는 id의 마스터 지갑이 없을 때 발생합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterWalletNotFoundException'
              example: *ref_15
        '401': *ref_14
      tags:
        - wallets
  /api/v3/filecoin/wallets/{masterWalletId}/flush:
    post:
      operationId: filecoin-WalletsController_flush
      summary: 입금 주소 잔액을 모두 끌어오기
      description: 입금 주소의 코인 잔액을 모두 상위의 지갑으로 끌어옵니다.
      parameters:
        - *ref_12
        - *ref_13
        - name: masterWalletId
          required: true
          in: path
          description: 마스터 지갑 ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlushRequestDTO'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDTO'
              example: *ref_0
          description: ''
        '400':
          description: 해당하는 id의 마스터 지갑이 없을 때 발생합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterWalletNotFoundException'
              example: *ref_15
        '401': *ref_14
      tags:
        - wallets
  /api/v3/filecoin/wallets/{masterWalletId}/deposit-addresses:
    get:
      operationId: filecoin-WalletsController_getDepositAddresses
      summary: 전체 입금 주소 목록 조회하기
      description: 특정 마스터 지갑에 속한 모든 입금 주소 조회합니다.
      parameters:
        - *ref_12
        - *ref_13
        - name: masterWalletId
          required: true
          in: path
          description: 마스터 지갑 ID
          schema:
            type: string
        - name: name
          required: false
          in: query
          description: 입금 주소 이름
          schema:
            type: string
        - name: address
          required: false
          in: query
          description: 입금 주소
          schema:
            type: string
        - name: size
          required: false
          in: query
          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15)'
          schema:
            type: number
        - name: page
          required: false
          in: query
          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)
          schema:
            type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyResponseForDepositAddressDTO'
              example:
                pagination: *ref_16
                results:
                  - &ref_17
                    id: a1f9e4c33ea9f51974490fd1c30efb3e
                    name: deposit-address-1
                    address: t1tian42omo3lnk6lh7mw6k3d4muelbfvvlmhufni
                    createdAt: '1614582860091'
                    updatedAt: '1614582928222'
          description: ''
        '400':
          description: 해당하는 id의 마스터 지갑이 없을 때 발생합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterWalletNotFoundException'
              example: *ref_15
        '401': *ref_14
      tags:
        - wallets
    post:
      operationId: filecoin-WalletsController_createDepositAddress
      summary: 입금 주소 생성하기
      description: 특정 마스터 지갑 하위에 새로운 입금 주소 생성합니다
      parameters:
        - *ref_12
        - *ref_13
        - name: masterWalletId
          required: true
          in: path
          description: 마스터 지갑 ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDepositAddressRequestDTO'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositAddressDTO'
              example: *ref_17
          description: ''
        '400':
          description: 해당하는 id의 마스터 지갑이 없을 때 발생합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterWalletNotFoundException'
              example: *ref_15
        '401': *ref_14
      tags:
        - wallets
  /api/v3/filecoin/wallets/{masterWalletId}/deposit-addresses/{depositAddressId}:
    get:
      operationId: filecoin-WalletsController_getDepositAddress
      summary: 입금 주소 정보 조회하기
      description: 특정 입금 주소를 조회합니다.
      parameters:
        - *ref_12
        - *ref_13
        - name: masterWalletId
          required: true
          in: path
          description: 마스터 지갑 ID
          schema:
            type: string
        - name: depositAddressId
          required: true
          in: path
          description: 입금 주소 ID
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositAddressDTO'
              example: *ref_17
          description: ''
        '400':
          description: 다음과 같은 bad request 에러가 발생할 수 있습니다.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/MasterWalletNotFoundException'
                  - $ref: '#/components/schemas/DepositAddressNotFoundException'
              examples:
                MasterWalletNotFoundException:
                  value: *ref_15
                DepositAddressNotFoundException:
                  value: &ref_18
                    message: >-
                      deposit address 'c27732256a1f8d45df5aec31ba7ef85cd' does
                      not exist
                    code: 4000
        '401': *ref_14
      tags:
        - wallets
  /api/v3/filecoin/wallets/{masterWalletId}/deposit-addresses/{depositAddressId}/balance:
    get:
      operationId: filecoin-WalletsController_getDepositAddressBalance
      summary: 입금 주소 잔고 조회하기
      description: 특정 입금 주소의 잔액을 조회합니다.
      parameters:
        - *ref_12
        - *ref_13
        - name: masterWalletId
          required: true
          in: path
          description: 마스터 지갑 ID
          schema:
            type: string
        - name: depositAddressId
          required: true
          in: path
          description: 입금 주소 ID
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceDTO'
          description: ''
        '401': *ref_14
      tags:
        - wallets
  /api/v3/filecoin/wallets/{masterWalletId}/deposit-addresses/{depositAddressId}/transfer:
    post:
      operationId: filecoin-WalletsController_transferFromDepositAddress
      summary: 입금 주소에서 코인 전송하기
      description: 특정 입금 주소에서 가상자산을 송금합니다.
      parameters:
        - *ref_12
        - *ref_13
        - name: masterWalletId
          required: true
          in: path
          description: 마스터 지갑 ID
          schema:
            type: string
        - name: depositAddressId
          required: true
          in: path
          description: 입금 주소 ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositAddressTransferRequestDTO'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferDTO'
              example: *ref_8
          description: ''
        '400':
          description: 해당하는 id의 입금 주소가 없을 때 발생합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositAddressNotFoundException'
              example: *ref_18
        '401': *ref_14
      tags:
        - wallets
  /api/v3/filecoin/wallets/{masterWalletId}/flushes:
    get:
      operationId: filecoin-WalletsController_getFlushes
      summary: 전체 집금 목록 조회하기
      description: 특정 마스터 지갑에서 발생한 전체 집금 목록을 조회합니다.
      parameters:
        - *ref_12
        - *ref_13
        - name: masterWalletId
          required: true
          in: path
          description: 마스터 지갑 ID
          schema:
            type: string
        - name: size
          required: false
          in: query
          description: '한 번의 요청으로 반환되는 응답의 개수 (기본값: 15)'
          schema:
            type: number
        - name: page
          required: false
          in: query
          description: 몇 번째 페이지를 조회할 것인지? (페이지는 0부터 시작)
          schema:
            type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyResponseForFlushDTO'
              example:
                pagination: *ref_16
                results:
                  - &ref_20
                    id: 76f42bbea97c5e5fb6420ee29060ffc3
                    masterWalletId: 49e129bd5e1e67eddc5e317ed2e42b4c
                    transfers: *ref_19
                    createdAt: '1612411568760'
                    updatedAt: '1612411724023'
          description: ''
        '400':
          description: 해당하는 id의 마스터 지갑이 없을 때 발생합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterWalletNotFoundException'
              example: *ref_15
        '401': *ref_14
      tags:
        - wallets
  /api/v3/filecoin/wallets/{masterWalletId}/flushes/{flushId}:
    get:
      operationId: filecoin-WalletsController_getFlush
      summary: 특정 집금 조회하기
      description: 특정 마스터 지갑에서 발생한 특정 집금 내역을 조회합니다.
      parameters:
        - *ref_12
        - *ref_13
        - name: masterWalletId
          required: true
          in: path
          description: 마스터 지갑 ID
          schema:
            type: string
        - name: flushId
          required: true
          in: path
          description: 집금 내역 ID
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyResponseForFlushDTO'
              example: *ref_20
          description: ''
        '400':
          description: 다음과 같은 bad request 에러가 발생할 수 있습니다.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/MasterWalletNotFoundException'
                  - $ref: '#/components/schemas/FlushNotFoundException'
              examples:
                MasterWalletNotFoundException:
                  value: *ref_15
                FlushNotFoundException:
                  value:
                    message: flush 'c27732256a1f8d45df5aec31ba7ef85cd' does not exist
                    code: 4000
        '401': *ref_14
      tags:
        - wallets
